package cn.med.dao;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import cn.med.entity.CwDepartment;
import cn.med.entity.CwUser;
import cn.med.entity.User;

public interface CwUserDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Thu Nov 15 22:11:44 CST 2018
     */
    @Delete({
        "delete from user",
        "where user_id = #{userId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer userId);
    
    
    
    @Delete({
    	"<script>",
	        "delete from user",
	        "where user_id in",
		        "<foreach collection='datas' item='id' open='(' separator=',' close=')'>",
		        "#{id}",
		        "</foreach>",
        "</script>"
    })
    int deleteByAll(@Param("datas")int[] datas);
    
    

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Thu Nov 15 22:11:44 CST 2018
     */
    @Insert({
        "insert into cw_user (id, department_id, ",
        "user_photo, user_name, ",
        "user_pwd, user_type, ",
        "name, phone, ",
        "creattime, token, ",
        "remark,area_id,area_str,work_code )",
        "values (#{id,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, ",
        "#{userPhoto,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, ",
        "#{userPwd,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, ",
        "#{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, ",
        "#{creattime,jdbcType=TIMESTAMP}, #{token,jdbcType=VARCHAR}, ",
        "#{remark,jdbcType=VARCHAR},#{areaId,jdbcType=INTEGER},#{areaStr,jdbcType=VARCHAR},#{workCode,jdbcType=VARCHAR})"
    })
    int insert(CwUser user);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Thu Nov 15 22:11:44 CST 2018
     */
    @Select({
        "select",
        "id, department_id, user_photo, user_name, user_pwd, user_type, name, ",
        "phone, creattime, token,remark,area_id ,area_str,work_code ",
        "from cw_user",
        "where user_name = #{userName,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="department_id", property="departmentId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_photo", property="userPhoto", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_pwd", property="userPwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.INTEGER),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="creattime", property="creattime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="area_id", property="areaId", jdbcType=JdbcType.INTEGER),
        @Result(column="area_str", property="areaStr", jdbcType=JdbcType.VARCHAR),
        @Result(column="work_code", property="workCode", jdbcType=JdbcType.VARCHAR),
    })
    CwUser selectByUserName(String userName);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Thu Nov 15 22:11:44 CST 2018
     */
    @Select({
    	"select",
    	"id, department_id, user_photo, user_name, user_pwd, user_type, name, ",
    	"phone, creattime, token,remark,area_id ,area_str,work_code ",
    	"from cw_user",
    	"where department_id = #{deptId,jdbcType=VARCHAR}"
    })
    @Results({
    	@Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
    	@Result(column="department_id", property="departmentId", jdbcType=JdbcType.INTEGER),
    	@Result(column="user_photo", property="userPhoto", jdbcType=JdbcType.VARCHAR),
    	@Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
    	@Result(column="user_pwd", property="userPwd", jdbcType=JdbcType.VARCHAR),
    	@Result(column="user_type", property="userType", jdbcType=JdbcType.INTEGER),
    	@Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
    	@Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
    	@Result(column="creattime", property="creattime", jdbcType=JdbcType.TIMESTAMP),
    	@Result(column="token", property="token", jdbcType=JdbcType.VARCHAR),
    	@Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
    	@Result(column="area_id", property="areaId", jdbcType=JdbcType.INTEGER),
    	@Result(column="area_str", property="areaStr", jdbcType=JdbcType.VARCHAR),
    	@Result(column="work_code", property="workCode", jdbcType=JdbcType.VARCHAR),
    })
    List<CwUser> selDepartById(String deptId);
    
    /**
     * 根据部门查询部门下的管理员
     * @param deptId
     * @return
     */
    @Select({
    	"select",
    	"id, department_id, user_photo, user_name, user_pwd, user_type, name, ",
    	"phone, creattime, token,remark,area_id ,area_str,work_code ",
    	"from cw_user",
    	"where department_id = #{deptId,jdbcType=INTEGER} and user_type=1 "
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="department_id", property="departmentId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_photo", property="userPhoto", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_pwd", property="userPwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.INTEGER),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="creattime", property="creattime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="area_id", property="areaId", jdbcType=JdbcType.INTEGER),
        @Result(column="area_str", property="areaStr", jdbcType=JdbcType.VARCHAR),
        @Result(column="work_code", property="workCode", jdbcType=JdbcType.VARCHAR),
    })
    CwUser selectByUserByDepartId(int deptId);
    
    
    @Select({
        "select",
        "id, department_id, user_photo, user_name, user_pwd, user_type, name, ",
        "phone, creattime, token,remark,area_id,area_str,work_code ",
        "from cw_user ",
        "where user_name = #{0} and user_pwd = #{1}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="department_id", property="departmentId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_photo", property="userPhoto", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_pwd", property="userPwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.INTEGER),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="creattime", property="creattime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="area_id", property="areaId", jdbcType=JdbcType.INTEGER),
        @Result(column="area_str", property="areaStr", jdbcType=JdbcType.VARCHAR),
        @Result(column="work_code", property="workCode", jdbcType=JdbcType.VARCHAR),
    })
    CwUser selectByUserOne(String userName,String userPwd);


    
    
    @Select({
        "select",
        "id, department_id, user_photo, user_name, user_pwd, user_type, name, ",
        "phone, creattime, token,remark,area_id ,area_str,work_code ",
        "from cw_user",
        "where token = #{token,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="department_id", property="departmentId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_photo", property="userPhoto", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_pwd", property="userPwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.INTEGER),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="creattime", property="creattime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="area_id", property="areaId", jdbcType=JdbcType.INTEGER),
        @Result(column="area_str", property="areaStr", jdbcType=JdbcType.VARCHAR),
        @Result(column="work_code", property="workCode", jdbcType=JdbcType.VARCHAR),
    })
    CwUser selectByToken(String token);

    
  
    
    
    
 
    
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Thu Nov 15 22:11:44 CST 2018
     */
    @Update({
        "update cw_user",
        "set department_id = #{departmentId,jdbcType=INTEGER},",
          "user_photo = #{userPhoto,jdbcType=VARCHAR},",
          "user_name = #{userName,jdbcType=VARCHAR},",
          "user_pwd = #{userPwd,jdbcType=VARCHAR},",
          "user_type = #{userType,jdbcType=INTEGER},",
          "name = #{name,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "creattime = #{creattime,jdbcType=TIMESTAMP},",
          "token = #{token,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "area_id = #{areaId,jdbcType=INTEGER},",
          "area_str = #{areaStr,jdbcType=VARCHAR}, ",
          "work_code = #{workCode,jdbcType=VARCHAR} ",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(CwUser user);
}