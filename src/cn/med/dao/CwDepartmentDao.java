package cn.med.dao;


import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import cn.med.entity.CwDepartment;
import cn.med.entity.Medicine;

public interface CwDepartmentDao {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Thu Nov 15 22:11:44 CST 2018
     */
    @Select({
        "select",
        "id, department_name, area_id,creature_id,creattime, remark ",
        "from cw_department",
        "where  area_id = #{areaId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="department_name", property="departmentName", jdbcType=JdbcType.VARCHAR),
        @Result(column="area_id", property="areaId", jdbcType=JdbcType.INTEGER),
        @Result(column="creature_id", property="creatureId", jdbcType=JdbcType.INTEGER),
        @Result(column="creattime", property="creattime", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    List<CwDepartment> selectDepart(String areaId);
    
    
    
    /**
     * 查询单个
     * @param mId
     * @return
     */
    @Select({
    	 "select",
         "id, department_name, area_id, creature_id,creattime, remark ",
         "from cw_department",
         "where  id = #{departId,jdbcType=INTEGER}"
    })
    @Results({
    	 @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
         @Result(column="department_name", property="departmentName", jdbcType=JdbcType.VARCHAR),
         @Result(column="area_id", property="areaId", jdbcType=JdbcType.INTEGER),
         @Result(column="creature_id", property="creatureId", jdbcType=JdbcType.INTEGER),
         @Result(column="creattime", property="creattime", jdbcType=JdbcType.VARCHAR),
         @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    CwDepartment selectDepartById(String departId);
    

    /**
     * 根据地区模糊查询部门
     * @param mId
     * @return
     */
    @Select({
        "select",
        "id, department_name, area_id, creature_id,creattime, remark ",
        "from cw_department",
        "where area_id = #{0} and department_name like CONCAT(#{1},'%') "
    })
    @Results({
    	@Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="department_name", property="departmentName", jdbcType=JdbcType.VARCHAR),
        @Result(column="area_id", property="areaId", jdbcType=JdbcType.INTEGER),
        @Result(column="creature_id", property="creatureId", jdbcType=JdbcType.INTEGER),
        @Result(column="creattime", property="creattime", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    List<CwDepartment> selDepartByName(Integer areaId,String deptName);
    
    
    
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Thu Nov 15 22:11:44 CST 2018
     */
    @Insert({
        "insert into cw_department (id, department_name, ",
        "area_id,creature_id, creattime,remark)  ",
        "values (#{id,jdbcType=INTEGER}, #{departmentName,jdbcType=VARCHAR}, ",
        "#{areaId,jdbcType=INTEGER},#{creatureId,jdbcType=INTEGER}, #{creattime,jdbcType=VARCHAR}, ",
        "#{remark,jdbcType=VARCHAR})"
    })
    int insert(CwDepartment depart);
    
    
    
    
    @Update({
        "update cw_department",
        "set department_name = #{departmentName,jdbcType=VARCHAR} ",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateDepart(CwDepartment depart);
    
    
    /**
     * 删除指定部门
     * @param datas
     * @return
     */
    @Delete({
        "delete from cw_department",
        "where id = #{areaId,jdbcType=INTEGER}"
    })
    int deleteDepart(Integer areaId);
    
    @Delete({
    	"<script>",
	        "delete from cw_department",
	        "where id in",
		        "<foreach collection='datas' item='id' open='(' separator=',' close=')'>",
		        "#{id}",
		        "</foreach>",
        "</script>"
    })
    int deleteDeparts(@Param("datas")int[] datas);
  
}